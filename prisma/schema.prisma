// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// ðŸ“¦ MÃ³dulo de Cadastros
model Company {
  id        Int                @id @default(autoincrement())
  name      String
  users     User[]
  clients   Client[]
  templates ModelMetaMessage[]
  createdAt DateTime           @default(now()) @map("created_at")
  updatedAt DateTime           @updatedAt @map("updated_at")

  @@map("tb_company")
}

model User {
  id            Int          @id @default(autoincrement())
  name          String
  email         String
  password      String
  phone         String
  active        Boolean      @default(true)
  sector        Sector       @relation(fields: [sectorId], references: [id])
  sectorId      Int          @map("sector_id")
  company       Company      @relation(fields: [companyId], references: [id])
  companyId     Int          @map("company_id")
  tickets       Ticket[]     @relation("AttendantTickets")
  statusChanges StatusHist[]
  createdAt     DateTime     @default(now()) @map("created_at")
  updatedAt     DateTime     @updatedAt @map("updated_at")

  @@map("tb_users")
}

model Client {
  id        Int      @id @default(autoincrement())
  name      String
  email     String?
  phone     String?
  active    Boolean  @default(true)
  company   Company  @relation(fields: [companyId], references: [id])
  companyId Int      @map("company_id")
  tickets   Ticket[]
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("tb_clients")
}

model Sector {
  id          Int      @id @default(autoincrement())
  name        String
  description String?
  active      Boolean  @default(true)
  users       User[]
  tickets     Ticket[]
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  @@map("tb_sectors")
}

model ModelMetaMessage {
  id          Int      @id @default(autoincrement())
  name        String
  category    String
  language    String
  contentJson Json     @map("content_json")
  active      Boolean  @default(true)
  company     Company  @relation(fields: [companyId], references: [id])
  companyId   Int      @map("company_id")
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  @@map("tb_model_meta_messages")
}

// ðŸ§© MÃ³dulo de Processos
enum TicketStatus {
  OPEN
  QUEUE
  ONGOING
  IDLE
  FINISHED
  CANCELED
}

model Ticket {
  id            Int          @id @default(autoincrement())
  description   String
  client        Client       @relation(fields: [clientId], references: [id])
  clientId      Int          @map("client_id")
  sector        Sector       @relation(fields: [sectorId], references: [id])
  sectorId      Int          @map("sector_id")
  status        TicketStatus
  attendant     User?        @relation("AttendantTickets", fields: [attendantId], references: [id])
  attendantId   Int?         @map("attendant_id")
  startAt       DateTime?    @map("start_at")
  endAt         DateTime?    @map("end_at")
  messages      Message[]
  statusHistory StatusHist[]
  createdAt     DateTime     @default(now()) @map("created_at")
  updatedAt     DateTime     @updatedAt @map("updated_at")

  @@map("tb_ticket")
}

model StatusHist {
  id              Int          @id @default(autoincrement())
  ticket          Ticket       @relation(fields: [ticketId], references: [id])
  ticketId        Int          @map("ticket_id")
  description     String?
  status          TicketStatus
  changedByUser   User         @relation(fields: [changedByUserId], references: [id])
  changedByUserId Int          @map("changed_by_user_id")
  createdAt       DateTime     @default(now()) @map("created_at")
  updatedAt       DateTime     @updatedAt @map("updated_at")

  @@map("tb_status_hist")
}

enum MessageStatus {
  SENT
  DELIVERED
  READ
  FAILED
}

model Message {
  id          Int                 @id @default(autoincrement())
  ticket      Ticket              @relation(fields: [ticketId], references: [id])
  ticketId    Int                 @map("ticket_id")
  content     String
  isFromUser  Boolean             @map("is_from_user")
  wpId        String?             @map("wp_id")
  wpStatus    MessageStatus?      @map("wp_status")
  wpTimestamp DateTime?           @map("wp_timestamp")
  attachments MessageAttachment[]
  buttons     MessageButton[]
  createdAt   DateTime            @default(now()) @map("created_at")
  updatedAt   DateTime            @updatedAt @map("updated_at")

  @@map("tb_message")
}

enum AttachmentType {
  IMAGE
  AUDIO
  VIDEO
  FILE
}

model MessageAttachment {
  id        Int            @id @default(autoincrement())
  message   Message        @relation(fields: [messageId], references: [id])
  messageId Int            @map("message_id")
  type      AttachmentType
  url       String
  mimeType  String         @map("mime_type")
  caption   String?

  @@map("tb_message_attachment")
}

model MessageButton {
  id        Int     @id @default(autoincrement())
  message   Message @relation(fields: [messageId], references: [id])
  messageId Int     @map("message_id")
  type      String
  payload   String
  text      String

  @@map("tb_message_buttons")
}
